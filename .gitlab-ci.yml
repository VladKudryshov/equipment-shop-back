image: docker:19.03.8

services:
  - docker:19.03.8-dind

variables:
  MAVEN_CLI_OPTS: "-Dmaven.repo.local=.m2 -DdeployAtEnd=true -DinstallAtEnd=true --batch-mode -Dmaven.test.skip=true"
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: "/certs"

stages:
  - build-jar
  - build-image
  - deploy

cache:
  paths:
    - .m2/

build-jar:
  stage: build-jar
  image: maven:3.6.1-jdk-8
  tags:
    - gitlab-org
  script:
    - echo $CI_REGISTRY_IMAGE
    - mvn $MAVEN_CLI_OPTS clean install
  artifacts:
    paths:
      - Dockerfile
      - target/equipment-shop-0.0.1-SNAPSHOT.jar
    expire_in: 3 weeks
  only:
    - master
    - dev

build-docker-image:
  stage: build-image
  tags:
    - docker
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_TOKEN $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build --cache-from $CI_REGISTRY_IMAGE/equipment-shop:latest --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE/equipment-shop:latest -f ./Dockerfile .
    - docker push $CI_REGISTRY_IMAGE/equipment-shop:latest
  dependencies:
    - build-jar
  only:
    - master
    - dev

deploy_dev:
  stage: deploy
  tags:
    - gitlab-org
  before_script:
    - apk add --no-cache openssh
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh
    - echo -e "$SSH_DEV_PRIVATE_KEY" > ~/.ssh/id-rsa.pem
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - chmod 600  ~/.ssh/id-rsa.pem
  script:
    - ssh -i ~/.ssh/id-rsa.pem root@$INSTANCE_IP "docker login -u $CI_REGISTRY_USER -p $CI_TOKEN $CI_REGISTRY && docker pull $CI_REGISTRY_IMAGE/equipment-shop:latest && docker stop equipment-shop; docker rm equipment-shop; docker run --name equipment-shop --restart always -d -p 8080:8080 -p 8000:8000 -v /opt/equipment-shop/apps:/opt/equipment-shop/apps --add-host=databasehost:$DATABASE_IP -e MAIL_SERVICE_LOGIN = $MAIL_SERVICE_LOGIN -e MAIL_SERVICE_PASSWORD = $MAIL_SERVICE_PASSWORD  $CI_REGISTRY_IMAGE/equipment-shop:latest"
  dependencies:
    - build-docker-image
  only:
    - master
    - dev